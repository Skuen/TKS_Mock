@page "/AddXK"
@inject NavigationManager NavigationManager
@inject SweetAlertService Swal

<h3>Thêm mới Phiếu xuất</h3>
<br />
<EditForm Model="v_objXK" OnValidSubmit="InsertXK">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <div class="form-control">
        <label for="id">Số Phiếu xuất Kho</label>
        <InputText id="id" @bind-Value="v_objXK.So_Phieu_Xuat_Kho" class="form-control"></InputText>
    </div>
    <div class="form-control">
        <label for="Kho">Kho</label>
        <select id="Kho" @bind="v_objXK.Kho_ID" class="form-control">
            <option value="" selected disabled>Hãy chọn Kho</option>
            @foreach (var item in v_arrKho)
            {
                <option value="@item.Ma_Kho">@item.Ten_Kho</option>
            }
        </select>
    </div>
    <div class="form-control">
        <label for="NCC">Nhà cung cấp</label>
        <select id="NCC" @bind="v_objXK.NCC_ID" class="form-control">
            <option value="" selected disabled>Hãy chọn Nhà cung cấp</option>
            @foreach (var item in v_arrNCC)
            {
                <option value="@item.Ma_NCC">@item.Ten_NCC</option>
            }
        </select>

    </div>
    <div class="form-control">
        <label>Ngày xuất kho: </label>
        <TelerikDatePicker @bind-Value="v_objXK.Ngay_Xuat_Kho"
                           Format="dd/MM/yyyy"
                           Width="300px"
                           Size="lg"
                           Min="@Min" Max="@Max">
        </TelerikDatePicker>
    </div>
    <div class="form-control">
        <label for="note">Ghi Chú</label>
        <InputText id="note" @bind-Value="v_objXK.Ghi_Chu" class="form-control"></InputText>
    </div>

    <div class="form-control">
        <label for="SP">Sản Phẩm</label>
        <TelerikMultiSelect @ref="multiSelect" Data=@v_arrSP
                            TextField="Ten_San_Pham" ValueField="Ma_San_Pham"
                            @bind-Value="@v_arrSelectedValues" OnChange="MapToRawData"
                            ClearButton="true" Filterable="true">
        </TelerikMultiSelect>
    </div>
    <br />
    <button type="submit" class="btn btn-primary" >Lưu</button>
    <button type="button" class="btn btn-primary" @onclick="BackToList">Quay Lại</button>
</EditForm>
@if (IsInserted)
{
    if (v_ires < 1)
    {
        <p class="alert alert-danger">Thêm thất bại</p>
        if (!string.IsNullOrEmpty(v_strArlertMessage))
        {
            <p class="alert alert-danger">@v_strArlertMessage</p>
        }
    }
}
@if (v_arrSelectedValues.Count > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>Mã Sản phẩm</th>
                <th>Tên Sản phẩm</th>
                <th>Số lượng</th>
                <th>Đơn giá</th>
                <th>Trị giá</th>
            </tr>
        </thead>
        @foreach (var item in v_arrXKRD)
        {
            <tr>
                <td>@item.San_Pham_ID</td>
                <td>@v_objSPController.FQ_165_SP_sp_sel_Get_By_ID(item.San_Pham_ID).Ten_San_Pham</td>
                <td><TelerikNumericTextBox Format="0" Min="1" @bind-Value="@item.SL_Xuat"></TelerikNumericTextBox></td>
                <td><TelerikNumericTextBox Format="C" Min="0.01" @bind-Value="@item.Don_Gia_Xuat"></TelerikNumericTextBox></td>
                <td><label>@string.Format("{0:C}", Math.Round((item.Don_Gia_Xuat * item.SL_Xuat), 2))</label></td>
                <button type="button" class="btn btn-danger"
                        @onclick="@(()=>RemoveItemFromSelect(item.San_Pham_ID))">
                    Remove
                </button>
            </tr>
        }
        <tr>
            <td></td>
            <td></td>
            <td></td>
            <td>Tổng tiền:</td>
            <td><label>@string.Format("{0:C}", Math.Round((GetTotalSum()), 2))</label></td>
        </tr>
    </table>
}

@code {
    //Depencies
    private CXNK_Xuat_Kho_Controller v_objXKController = new();
    private CXNK_Xuat_Kho_Raw_Data_Controller v_objXKRDController = new();
    private CDM_Kho_Controller v_objKhoController = new();
    private CDM_NCC_Controller v_objNCCController = new();
    private CDM_San_Pham_Controller v_objSPController = new();
    //variables
    private CXNK_Xuat_Kho v_objXK = new();
    private List<CXNK_Xuat_Kho_Raw_Data> v_arrXKRD = new();
    private List<CDM_Kho> v_arrKho = new();
    private List<CDM_NCC> v_arrNCC = new();
    private int v_ires = 0;
    private bool IsInserted = false;
    private string v_strArlertMessage = string.Empty;
    //variables for multiple select
    private List<CDM_San_Pham> v_arrSP = new();
    private List<string> v_arrSelectedValues = new();
    private List<string> v_arrPreviousSelected = new();
    TelerikMultiSelect<CDM_San_Pham, string> multiSelect = new();
    //For date picker
    public DateTime Min = new DateTime(1990, 1, 1, 8, 15, 0);
    public DateTime Max = new DateTime(2025, 1, 1, 19, 30, 45);
    //Function
    protected override void OnInitialized()
    {
        v_arrKho = v_objKhoController.FQ_114_K_sp_sel_List_For_Cache();
        v_arrNCC = v_objNCCController.FQ_123_N_sp_sel_List_For_Cache();
        v_arrSP = v_objSPController.FQ_165_SP_sp_sel_List_For_Cache();
    }
    private void BackToList()
    {
        NavigationManager.NavigateTo("/XK");
    }
    private double GetTotalSum()
    {
        double v_dSum = 0;
        foreach (var item in v_arrXKRD)
        {
            v_dSum += item.Don_Gia_Xuat * item.SL_Xuat;
        }
        return v_dSum;
    }
    private void MapToRawData()
    {
        var itemsToInsert = v_arrSelectedValues.Except(v_arrPreviousSelected).ToList();
        var itemsToDelete = v_arrPreviousSelected.Except(v_arrSelectedValues).ToList();
        foreach (var item_id in itemsToInsert)
        {
            v_arrXKRD.Add(new CXNK_Xuat_Kho_Raw_Data
                {
                    San_Pham_ID = item_id,
                    SL_Xuat = 1,
                    Don_Gia_Xuat = 1
                });
        }

        foreach (var item_id in itemsToDelete)
        {
            v_arrXKRD.RemoveAll(item => item.San_Pham_ID == item_id);
        }
        v_arrPreviousSelected = v_arrSelectedValues;
    }
    private void RemoveItemFromSelect(string p_strSP_Id)
    {
        v_arrSelectedValues.Remove(p_strSP_Id);
        v_arrPreviousSelected = v_arrSelectedValues;
        multiSelect.Rebind();
        v_arrXKRD.RemoveAll(item => item.San_Pham_ID == p_strSP_Id);
    }
    private async Task InsertXK()
    {
        if (this.v_objXK == null) return;
        //For transaction
        SqlConnection v_conn = null;
        SqlTransaction v_trans = null;
        v_conn = CSqlHelper.CreateConnection(CConfig.TKS_Mock_Conn_String);
        v_conn.Open();
        v_trans = v_conn.BeginTransaction();
        try
        {
            //Insert header
            v_ires = v_objXKController.FQ_728_XK_sp_ins_Insert(v_conn, v_trans, v_objXK);
            //Inser details
            foreach (var item in v_arrXKRD)
            {
                item.Xuat_Kho_ID = v_objXK.So_Phieu_Xuat_Kho;
                v_ires = v_objXKRDController.FQ_734_XKRD_sp_ins_Insert(v_conn, v_trans, item);
            }
            v_trans.Commit();
            if (v_ires > 0)
            {
                await Swal.FireAsync(
                    "Thêm dữ liệu hoàn tất",
                    "Tất cả dữ liệu đã được thêm mới.",
                    SweetAlertIcon.Success
                    );
                NavigationManager.NavigateTo("/XK");
            }
        }
        catch (Exception ex)
        {
            v_strArlertMessage = ex.Message;
            v_ires = 0;
            Console.WriteLine(ex.ToString());
            if (v_trans != null)
                v_trans.Rollback();
        }
        finally
        {
            if (v_trans != null)
                v_trans.Dispose();

            if (v_conn != null)
                v_conn.Close();
        }

    }

}
