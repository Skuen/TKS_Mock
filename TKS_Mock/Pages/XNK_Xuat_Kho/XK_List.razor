@page "/XK"

@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject SweetAlertService Swal
<h3>Danh sách Phiếu Xuất</h3>
<br />
<!--Nút thêm mới-->
<button type="button"
        class="btn btn-primary"
        @onclick="AddXK">
    <span class="oi oi-plus"></span>
    Thêm Phiếu Xuất
</button>
<br />
<br />
<!-- Thanh tìm kiếm -->
<div class="input-group">
    <input type="text"
           class="form-control"
           placeholder="Điền tên phiếu xuất để tìm kiếm"
           @bind-value="v_strSearchTerm" />
    <button type="button"
            class="btn-success input-group-text"
            @onclick="OnSearch">
        <span class="oi oi-magnifying-glass"></span>
        Tìm kiếm
    </button>
</div>
<!-- Danh sách-->
<table class="table"
    <thead>
        <tr>
            <th>Số Phiếu Xuất Kho</th>
            <th>Kho</th>
            <th>Nhà cung cấp</th>
            <th>Ngày xuất kho</th>
            <th>Ghi Chú</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in v_arrNK)
        {
                    <tr>
                        <td>@item.So_Phieu_Xuat_Kho</td>
                        <td>@v_objKhoController.FQ_114_K_sp_sel_Get_By_ID(item.Kho_ID).Ten_Kho</td>
                        <td>@v_objNCCController.FQ_123_N_sp_sel_Get_By_ID(item.NCC_ID).Ten_NCC</td>
                        <td>@(item.Ngay_Xuat_Kho.HasValue ? item.Ngay_Xuat_Kho.Value.ToString("HH:mm  dd/MM/yyyy") : "")</td>
                        <td>@item.Ghi_Chu</td>
                        <td>
                            <button type="button" class="btn btn-secondary"
                                     @onclick="@(()=>PopUpReport(item.So_Phieu_Xuat_Kho))">
                                     <span class="oi oi-print"></span> Print</button>
                            <button type="button" class="btn btn-success"
                                    @onclick="@(()=>EditXK(item.So_Phieu_Xuat_Kho))">
                                    <span class="oi oi-pencil"></span> Edit</button>
                            <button type="button" class="btn btn-danger"
                                    @onclick="@(()=>ShowConfirmation(item))">
                                    <span class="oi oi-trash"></span> Delete</button>
                        </td>

                    </tr>
        }
    </tbody>
</table>
<br />

@code {
    //depencies
    CXNK_Xuat_Kho_Controller v_objXKController = new();
    CDM_Kho_Controller v_objKhoController = new();
    CDM_NCC_Controller v_objNCCController = new();
    //variables
    public List<CXNK_Xuat_Kho> v_arrNK = new();
    private string v_strSearchTerm = string.Empty;
    //functions
    protected override void OnInitialized()
    {
        v_arrNK = v_objXKController.FQ_728_XK_sp_sel_List_For_Cache();
    }

    private void OnSearch()
    {
        if (string.IsNullOrEmpty(v_strSearchTerm))
        {
            v_arrNK = v_objXKController.FQ_728_XK_sp_sel_List_For_Cache();
        }
    }

    private void AddXK()
    {
        NavigationManager.NavigateTo("/AddXK");
    }

    private void EditXK(string Ma_XK)
    {
        NavigationManager.NavigateTo($"/EditXK/{Ma_XK}");
    }

    private async Task ShowConfirmation(CXNK_Xuat_Kho v_objXK)
    {

        var result = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Are you sure?",
                Text = "You will not be able to recover this!",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true,
                ConfirmButtonText = "Yes, delete it!",
                ConfirmButtonColor = "red",
                CancelButtonText = "No, keep it"
            });
        if (!string.IsNullOrEmpty(result.Value))
        {
            //v_iRes = số row bị ảnh hưởng dưới database
            var v_iRes = DeleteXK(v_objXK);
            //Có ít nhất 1 row bị ảnh hưởng
            if (v_iRes > 0)
            {
                await Swal.FireAsync(
                  "Deleted",
                  "Your data has been deleted.",
                  SweetAlertIcon.Success
                  );
                v_arrNK.Remove(v_objXK);
            }
            //Nếu v_iRes trả default hoặc không có row nào bị ảnh hưởng
            if (v_iRes == 0 || v_iRes == -1)
            {
                await Swal.FireAsync(
                  "Cancelled",
                  "Something wrong happened",
                  SweetAlertIcon.Error
                  );
            }
        }
    }

    private int DeleteXK(CXNK_Xuat_Kho v_objXK)
    {
        int v_iRes = 0;
        try
        {
            v_iRes = v_objXKController.FQ_728_XK_sp_del_Delete_By_ID(v_objXK.So_Phieu_Xuat_Kho);
        }
        catch (Exception)
        {
            return v_iRes;
        }
        return v_iRes;
    }
    private async Task PopUpReport(string p_strId)
    {
        //<ReportViewerPage></ReportViewerPage>
        await JSRuntime.InvokeVoidAsync("open", $"/XK_reportviewer/{p_strId}", "_blank");
    }

}
