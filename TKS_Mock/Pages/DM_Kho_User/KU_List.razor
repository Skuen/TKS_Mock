@page "/KU"

@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject SweetAlertService Swal
<h3>Danh sách Kho User</h3>
<br />
@* <!--Nút thêm mới-->
<button type="button"
        class="btn btn-primary"
    <span class="oi oi-plus"></span>
    Thêm Kho User
</button> *@
<br />
<EditForm Model="v_objKhoUser" OnValidSubmit="AddKU">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    <!--Nút thêm mới-->
    <button type="submit"
            class="btn btn-primary"
        <span class="oi oi-plus"></span>
        Thêm Kho User
    </button>
    <br />
    <div class="form-control">
        <label for="name">Mã Đăng Nhập</label>
        <InputText id="name" @bind-Value="v_objKhoUser.Ma_Dang_Nhap" class="form-control"></InputText>
    </div>
    
</EditForm>
<!--Filter kho-->
<div class="form-control">
    <label for="Kho">Kho</label>
    <select id="Kho" @bind-value="v_objKhoUser.Kho_ID"
            @onchange="OnKhoSeleted" @bind-value:event="oninput"
            class="form-control">
        <option value="" selected disabled>Hãy chọn Kho</option>
        @foreach (var item in v_arrKho)
        {
            <option value="@item.Ma_Kho">@item.Ten_Kho</option>
        }
    </select>
</div>

@if (IsInserted)
{
    if (v_ires == 1)
    {
        <p class="alert alert-success">Thêm mới thành công</p>
    }
    else
    {
        <p class="alert alert-danger">Thêm mới thất bại</p>
        if (!string.IsNullOrEmpty(v_strArlertMessage))
        {
            <p class="alert alert-danger">@v_strArlertMessage</p>
        }
    }
}
<br />
<!-- Danh sách-->
<table class="table"
    <thead>
        <tr>
            <th>Mã Đăng Nhập</th>
            <th>Tên Kho</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in v_arrKhoUser)
        {
                <tr>
                    <td>@item.Ma_Dang_Nhap</td>
                        <td>@v_objKhoController.FQ_114_K_sp_sel_Get_By_ID(item.Kho_ID).Ten_Kho</td>
                    <td>
                        <button type="button"
                                class="btn btn-success" @onclick="@(()=>EditKho(item.Ma_Dang_Nhap))">
                            <span class="oi oi-pencil"></span> Sửa</button>
                        <button type="button"
                                class="btn btn-danger" @onclick="@(()=>ShowConfirmation(item))">
                            <span class="oi oi-trash"></span> Xóa</button>
                    </td>

                </tr>
        }
    </tbody>
</table>
<br />

@code {
    private string v_strSearchTerm = string.Empty;
    private string v_strMa_Dang_Nhap = string.Empty;
    public List<CDM_Kho_User> v_arrKhoUser = new();
    public List<CDM_Kho> v_arrKho = new();
    public CDM_Kho_User v_objKhoUser = new();
    CDM_Kho_User_Controller v_objKhoUserController = new();
    CDM_Kho_Controller v_objKhoController = new();
    private bool IsInserted = false;
    private int v_ires = 0;
    private string v_strArlertMessage = string.Empty;
    private void OnSearch()
    {
        if (string.IsNullOrEmpty(v_strSearchTerm))
        {
            v_arrKhoUser = v_objKhoUserController.FQ_117_KU_sp_sel_List_For_Cache();
        }
    }
    private void OnKhoSeleted()
    {
        v_arrKhoUser = v_objKhoUserController.FQ_117_KU_sp_sel_List_For_Cache();
        v_arrKhoUser = v_arrKhoUser.Where(item => item.Kho_ID == v_objKhoUser.Kho_ID).ToList();
    }
    protected override void OnInitialized()
    {
        v_arrKhoUser = v_objKhoUserController.FQ_117_KU_sp_sel_List_For_Cache();
        v_arrKho = v_objKhoController.FQ_114_K_sp_sel_List_For_Cache();
    }
    private void AddKU()
    {
        //NavigationManager.NavigateTo("/AddKU");
        if (this.v_objKhoUser == null) return;
        try
        {
            IsInserted = true;
            v_ires = v_objKhoUserController.FQ_117_KU_sp_ins_Insert(v_objKhoUser);
        }
        catch (Exception ex)
        {
            v_ires = 0;
            v_strArlertMessage = ex.Message;
            Console.WriteLine(ex.ToString());
        }
        OnKhoSeleted();
    }
    private void EditKho(string p_strMa_Dang_Nhap)
    {
        NavigationManager.NavigateTo($"/EditKU/{p_strMa_Dang_Nhap}");
    }
    private int DeleteKho(CDM_Kho_User v_objKhoUser)
    {
        int v_iRes = 0;
        try
        {
            v_iRes = v_objKhoUserController.FQ_117_KU_sp_del_Delete_By_ID(v_objKhoUser.Ma_Dang_Nhap);
        }
        catch (Exception)
        {
            return v_iRes;
        }
        return v_iRes;
    }
    private async Task ShowConfirmation(CDM_Kho_User v_objKhoUser)
    {
        var result = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Bạn chắc chứ?",
                Text = "Dữ liệu này sẽ mất sau khi xóa!",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true,
                ConfirmButtonText = "Xóa!",
                ConfirmButtonColor = "red",
                CancelButtonText = "Hủy bỏ"
            });
        if (!string.IsNullOrEmpty(result.Value))
        {
            var v_iRes = DeleteKho(v_objKhoUser);
            //Có ít nhất 1 row bị ảnh hưởng
            if (v_iRes > 0)
            {
                await Swal.FireAsync(
                  "Đã xóa",
                  "Dữ liệu của bạn đã được xóa thành công.",
                  SweetAlertIcon.Success
                  );
                v_arrKhoUser.Remove(v_objKhoUser);

            }
            //Nếu v_iRes trả default hoặc không có row nào bị ảnh hưởng
            if (v_iRes == 0 || v_iRes == -1)
            {
                await Swal.FireAsync(
                  "Hủy bỏ",
                  "Xóa không thành công!",
                  SweetAlertIcon.Error
                  );
            }
        }
    }

}
