@page "/DVT"

@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject SweetAlertService Swal
<h3>Danh sách Đơn Vị Tính</h3>
<br />
<!--Nút thêm mới-->
<button type="button"
        class="btn btn-primary"
        @onclick="AddDVT">
    <span class="oi oi-plus"></span>
    Thêm Đơn Vị Tính
</button>
<br />
<br />
<!-- Thanh tìm kiếm -->
<div class="input-group">
    <input type="text"
           class="form-control"
           placeholder="Điền tên đơn vị tính để tìm kiếm"
           @bind-value="v_strSearchTerm" />
    <button type="button"
            class="btn-success input-group-text"
            @onclick="OnSearch">
        <span class="oi oi-magnifying-glass"></span>
        Tìm kiếm
    </button>
</div>

<!-- Danh sách-->
<table class="table"
    <thead>
        <tr>
            <th>Mã Đơn Vị Tính</th>
            <th>Tên Đơn Vị Tính</th>
            <th>Ghi Chú</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in v_arrDVT)
        {
            <tr>
                <td>@item.Ma_Don_Vi_Tinh</td>
                <td>@item.Ten_Don_Vi_Tinh</td>
                <td>@item.Ghi_Chu</td>
                <td>
                    <button type="button"
                            class="btn btn-success" @onclick="@(()=>EditDVT(item.Ma_Don_Vi_Tinh))">
                            <span class="oi oi-pencil"></span> Edit</button>
                    <button type="button"
                            class="btn btn-danger" @onclick="@(()=>ShowConfirmation(item))">
                            <span class="oi oi-trash"></span> Delete</button>
                </td>

            </tr>
        }
    </tbody>
</table>
<br />


@code {
    private string v_strSearchTerm = string.Empty;
    public List<CDM_Don_Vi_Tinh> v_arrDVT = new();
    CDM_Don_Vi_Tinh_Controller v_objDVTController = new();

    private void OnSearch()
    {
        if (string.IsNullOrEmpty(v_strSearchTerm))
        {
            v_arrDVT = v_objDVTController.FQ_110_DVT_sp_sel_List_For_Cache();
        }
    }
    protected override void OnInitialized()
    {
        v_arrDVT = v_objDVTController.FQ_110_DVT_sp_sel_List_For_Cache();
    }
    private void AddDVT()
    {
        NavigationManager.NavigateTo("/AddDVT");
    }
    private void EditDVT(string Ma_DVT)
    {
        NavigationManager.NavigateTo($"/EditDVT/{Ma_DVT}");
    }
    private int DeleteDVT(CDM_Don_Vi_Tinh v_objDVT)
    {
        int v_iRes = 0;
        try
        {
            v_iRes = v_objDVTController.FQ_110_DVT_sp_del_Delete_By_ID(v_objDVT.Ma_Don_Vi_Tinh);
        }
        catch (Exception)
        {
            return v_iRes;
        }
        return v_iRes;
    }
    private async Task ShowConfirmation(CDM_Don_Vi_Tinh v_objDVT)
    {

        var result = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Are you sure?",
                Text = "You will not be able to recover this!",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true,
                ConfirmButtonText = "Yes, delete it!",
                ConfirmButtonColor = "red",
                CancelButtonText = "No, keep it"
            });
        if (!string.IsNullOrEmpty(result.Value))
        {
            var v_iRes = DeleteDVT(v_objDVT);
            //Có ít nhất 1 row bị ảnh hưởng
            if (v_iRes > 0)
            {
                await Swal.FireAsync(
                  "Deleted",
                  "Your data has been deleted.",
                  SweetAlertIcon.Success
                  );
                v_arrDVT.Remove(v_objDVT);

            }
            //Nếu v_iRes trả default hoặc không có row nào bị ảnh hưởng
            if (v_iRes == 0 || v_iRes == -1)
            {
                await Swal.FireAsync(
                  "Cancelled",
                  "Something wrong happened",
                  SweetAlertIcon.Error
                  );
            }
        }
    }
    
}
