@page "/LSP"

@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
<h3>Loại Sản Phẩm</h3>
<br/>
<!-- Thanh tìm kiếm -->
<div class="input-group">
    <input type="text"
           class="form-control"
           placeholder="Điền loại sản phẩm để tìm kiếm"
           @bind-value="v_strSearchTerm" />
    <button type="button"
            class="btn-success input-group-text"
            @onclick="OnSearch">
        Tìm kiếm
    </button>
</div>
<br />
<!-- Danh sách-->
<table class="table"
    <thead>
        <tr>
            <th>Mã LSP</th>
            <th>Tên LSP</th>
            <th>Ghi Chú</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in v_arrLSP)
        {
                <tr>
                    <td>@item.Ma_LSP</td>
                    <td>@item.Ten_LSP</td>
                    <td>@item.Ghi_Chu</td>
                    <td>
                        <button type="button"
                                class="btn btn-success" @onclick="@(()=>EditLSP(item.Ma_LSP))">Edit</button>
                        <button type="button"
                                            class="btn btn-danger" @onclick="@(()=>ShowConfirmation(item))">Delete</button>
                    </td>

                </tr>
        }
    </tbody>
</table>
<ConfirmDialog @ref="confirmDialog" OnConfirmed="HandleConfirm"></ConfirmDialog>
<br />
<!--Nút thêm mới-->
<button 
    type="button"
    class="btn btn-primary"
    @onclick="AddLSP">Thêm Loại Sản Phẩm</button>
@code {
    private string v_strSearchTerm = string.Empty;
    public List<CDM_Loai_San_Pham> v_arrLSP = new();
    public CDM_Loai_San_Pham v_objLSP_For_Delete = new();
    CDM_Loai_San_Pham_Controller v_objLSPController = new();
    private ConfirmBase confirmDialog;

    private void OnSearch()
    {
        if (string.IsNullOrEmpty(v_strSearchTerm))
        {
            v_arrLSP = v_objLSPController.FQ_122_LSP_sp_sel_List_For_Cache();
        }
    }
    private void AddLSP()
    {
        NavigationManager.NavigateTo("/AddLSP");
    }
    private void ShowConfirmation(CDM_Loai_San_Pham LSP)
    {
        confirmDialog.Show();
        v_objLSP_For_Delete = LSP;
    }
    private void HandleConfirm(bool value)
    {
        if (value)
        {
            DeleteLSP(v_objLSP_For_Delete);
        }
    }
    protected override void OnParametersSet()
    {
        //Nhớ Sửa thằng này xả list by name sử dụng parameter là v_strSearchTerm
        v_arrLSP = v_objLSPController.FQ_122_LSP_sp_sel_List_For_Cache();

    }
    protected override void OnInitialized()
    {
        v_arrLSP = v_objLSPController.FQ_122_LSP_sp_sel_List_For_Cache();
    }
    private void EditLSP(string Ma_LSP)
    {
        NavigationManager.NavigateTo($"/EditLSP/{Ma_LSP}");
    }
    private void DeleteLSP(CDM_Loai_San_Pham LSP)
    {
        try
        {
            int v_iRes = v_objLSPController.FQ_122_LSP_sp_del_Delete_By_ID(LSP.Ma_LSP);
            v_arrLSP.Remove(LSP);
        }
        catch (Exception ex)
        {
            throw;
        }
    }
}
