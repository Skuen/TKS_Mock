@page "/Kho"

@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject SweetAlertService Swal
<h3>Danh sách Kho</h3>
<br />
<!--Nút thêm mới-->
<button type="button"
        class="btn btn-primary"
        @onclick="AddKho">
    Thêm Kho
</button>
<br />
<br />
<!-- Thanh tìm kiếm -->
<div class="input-group">
    <input type="text"
           class="form-control"
           placeholder="Điền tên kho để tìm kiếm"
           @bind-value="v_strSearchTerm" />
    <button type="button"
            class="btn-success input-group-text"
            @onclick="OnSearch">
        Tìm kiếm
    </button>
</div>
<!-- Danh sách-->
<table class="table"
    <thead>
        <tr>
            <th>Mã Kho</th>
            <th>Tên Kho</th>
            <th>Ghi Chú</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in v_arrKho)
        {
            <tr>
                <td>@item.Ma_Kho</td>
                <td>@item.Ten_Kho</td>
                <td>@item.Ghi_Chu</td>
                <td>
                    <button type="button"
                                class="btn btn-success" @onclick="@(()=>EditKho(item.Ma_Kho))">Edit</button>
                    <button type="button"
                                        class="btn btn-danger" @onclick="@(()=>ShowConfirmation(item))">Delete</button>
                </td>

            </tr>
        }
    </tbody>
</table>
<br />

@code {
    private string v_strSearchTerm = string.Empty;
    public List<CDM_Kho> v_arrKho = new();
    CDM_Kho_Controller v_objKhoController = new();

    private void OnSearch()
    {
        if (string.IsNullOrEmpty(v_strSearchTerm))
        {
            v_arrKho = v_objKhoController.FQ_114_K_sp_sel_List_For_Cache();
        }
    }
    protected override void OnInitialized()
    {
        v_arrKho = v_objKhoController.FQ_114_K_sp_sel_List_For_Cache();
    }
    private void AddKho()
    {
        NavigationManager.NavigateTo("/AddKho");
    }
    private void EditKho(string Ma_Kho)
    {
        NavigationManager.NavigateTo($"/EditKho/{Ma_Kho}");
    }
    private int DeleteKho(CDM_Kho Kho)
    {
        int v_iRes = 0;
        try
        {
            v_iRes = v_objKhoController.FQ_114_K_sp_del_Delete_By_ID(Kho.Ma_Kho);
            v_arrKho.Remove(Kho);
        }
        catch (Exception)
        {
            throw;
        }
        return v_iRes;
    }
    private async Task ShowConfirmation(CDM_Kho v_objKho)
    {
        var result = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Are you sure?",
                Text = "You will not be able to recover this!",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true,
                ConfirmButtonText = "Yes, delete it!",
                ConfirmButtonColor = "red",
                CancelButtonText = "No, keep it"
            });
        if (!string.IsNullOrEmpty(result.Value))
        {
            var v_iRes = DeleteKho(v_objKho);
            if (v_iRes == 1)
            {
                await Swal.FireAsync(
                  "Deleted",
                  "Your data has been deleted.",
                  SweetAlertIcon.Success
                  );
            }
        }
    }
    
}
